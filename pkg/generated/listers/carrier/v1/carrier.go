/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "carrier/pkg/apis/carrier/v1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CarrierLister helps list Carriers.
// All objects returned here must be treated as read-only.
type CarrierLister interface {
	// List lists all Carriers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Carrier, err error)
	// Carriers returns an object that can list and get Carriers.
	Carriers(namespace string) CarrierNamespaceLister
	CarrierListerExpansion
}

// carrierLister implements the CarrierLister interface.
type carrierLister struct {
	indexer cache.Indexer
}

// NewCarrierLister returns a new CarrierLister.
func NewCarrierLister(indexer cache.Indexer) CarrierLister {
	return &carrierLister{indexer: indexer}
}

// List lists all Carriers in the indexer.
func (s *carrierLister) List(selector labels.Selector) (ret []*v1.Carrier, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Carrier))
	})
	return ret, err
}

// Carriers returns an object that can list and get Carriers.
func (s *carrierLister) Carriers(namespace string) CarrierNamespaceLister {
	return carrierNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CarrierNamespaceLister helps list and get Carriers.
// All objects returned here must be treated as read-only.
type CarrierNamespaceLister interface {
	// List lists all Carriers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Carrier, err error)
	// Get retrieves the Carrier from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Carrier, error)
	CarrierNamespaceListerExpansion
}

// carrierNamespaceLister implements the CarrierNamespaceLister
// interface.
type carrierNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Carriers in the indexer for a given namespace.
func (s carrierNamespaceLister) List(selector labels.Selector) (ret []*v1.Carrier, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Carrier))
	})
	return ret, err
}

// Get retrieves the Carrier from the indexer for a given namespace and name.
func (s carrierNamespaceLister) Get(name string) (*v1.Carrier, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("carrier"), name)
	}
	return obj.(*v1.Carrier), nil
}
